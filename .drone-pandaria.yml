---
kind: pipeline
name: default-amd64

platform:
  os: linux
  arch: amd64

steps:
- name: pre-check
  pull: default
  image: rancher/dapper:v0.4.1
  commands:
    - apk add git make curl
    - make -f Makefile.pandaria pre-check
  privileged: true
  volumes:
    - name: docker
      path: /var/run/docker.sock
  when:
    event:
      - push
      - pull_request
      - tag

- name: build
  pull: default
  image: rancher/dapper:v0.4.1
  environment:
    OAUTH_TOKEN:
      from_secret: github_token
  commands:
  - apk add git make curl
  - make -f Makefile.pandaria
  privileged: true
  volumes:
  - name: docker
    path: /var/run/docker.sock
  when:
    event:
    - push
    - pull_request
    - tag

- name: stage-binaries
  pull: default
  image: rancher/dapper:v0.4.1
  commands:
  - "cp -r ./bin/* ./package/"
  when:
    event:
    - push
    - tag

- name: docker-publish-master
  pull: default
  image: plugins/docker
  settings:
    build_args:
    - ARCH=amd64
    - VERSION=v2.2-ent-dev
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile.pandaria
    password:
      from_secret: docker_password
    repo: cnrancher/rancher
    tag: v2.2-ent-dev
    username:
      from_secret: docker_username
  when:
    branch:
    - release/v2.2-ent
    event:
    - push

- name: docker-publish-master-agent
  pull: default
  image: plugins/docker
  settings:
    build_args:
    - ARCH=amd64
    - VERSION=v2.2-ent-dev
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile_pandaria.agent
    password:
      from_secret: docker_password
    repo: cnrancher/rancher-agent
    tag: v2.2-ent-dev
    username:
      from_secret: docker_username
  when:
    branch:
    - release/v2.2-ent
    event:
    - push

- name: docker-publish
  pull: default
  image: plugins/docker
  settings:
    build_args:
    - ARCH=amd64
    - "VERSION=${DRONE_TAG}"
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile.pandaria
    password:
      from_secret: docker_password
    repo: cnrancher/rancher
    tag: "${DRONE_TAG}"
    username:
      from_secret: docker_username
  when:
    event:
    - tag

- name: docker-publish-agent
  pull: default
  image: plugins/docker
  settings:
    build_args:
    - ARCH=amd64
    - "VERSION=${DRONE_TAG}"
    context: package/
    custom_dns: 1.1.1.1
    dockerfile: package/Dockerfile_pandaria.agent
    password:
      from_secret: docker_password
    repo: cnrancher/rancher-agent
    tag: "${DRONE_TAG}"
    username:
      from_secret: docker_username
  when:
    event:
    - tag

- name: publish-airgap
  pull: default
  image: rancher/dapper:v0.4.1
  environment:
    OAUTH_TOKEN:
      from_secret: github_token
  commands:
    - apk add git make curl
    - make -f Makefile.pandaria publish-airgap
  privileged: true
  volumes:
    - name: docker
      path: /var/run/docker.sock
  when:
    event:
      - push
      - tag

- name: github_binary_prerelease
  image: plugins/github-release
  settings:
    api_key:
      from_secret: github_token
    checksum:
      - sha256
    files:
      - "bin/rancher-*"
    prerelease: true
  when:
    event:
      - tag
    ref:
      - "refs/tags/*rc*"
      - "refs/tags/*alpha*"

- name: github_binary_release
  image: plugins/github-release
  settings:
    api_key:
      from_secret: github_token
    checksum:
      - sha256
    files:
      - "bin/rancher-*"
  when:
    event:
      - tag
    ref:
      include:
        - "refs/tags/v2*"
      exclude:
        - "refs/tags/*rc*"
        - "refs/tags/*alpha*"

- name: chart-publish
  image: jacie/drone-aliyun-oss
  pull: always
  environment:
    ALIYUN_ACCESS_KEY_ID:
      from_secret: aliyun_access_id
    ALIYUN_SECRET_ACCESS_KEY:
      from_secret: aliyun_access_secret
    PLUGIN_SOURCE: bin/chart
    ALIYUN_BUCKET: oss://pandaria-releases
    ALIYUN_ENDPOINT: http://oss-cn-beijing.aliyuncs.com
    PLUGIN_TARGET: server-charts
    PLUGIN_RECURSIVE: -r
    PLUGIN_ACCESS: public-read
  commands:
    - "aliyun-oss"
  when:
    event:
      - push
      - tag

volumes:
- name: docker
  host:
    path: /var/run/docker.sock

node:
  instance: agent-amd64

trigger:
  event:
    exclude:
    - promote
...
